[{"/home/nicholasc/Documents/Side Projects/HTN2021/client/src/index.js":"1","/home/nicholasc/Documents/Side Projects/HTN2021/client/src/reportWebVitals.js":"2","/home/nicholasc/Documents/Side Projects/HTN2021/client/src/App.js":"3","/home/nicholasc/Documents/Side Projects/HTN2021/client/src/utils/index.js":"4","/home/nicholasc/Documents/Side Projects/HTN2021/client/src/pages/index.js":"5","/home/nicholasc/Documents/Side Projects/HTN2021/client/src/context/user.js":"6","/home/nicholasc/Documents/Side Projects/HTN2021/client/src/utils/socket.js":"7","/home/nicholasc/Documents/Side Projects/HTN2021/client/src/utils/session.js":"8","/home/nicholasc/Documents/Side Projects/HTN2021/client/src/pages/landing.js":"9","/home/nicholasc/Documents/Side Projects/HTN2021/client/src/pages/HostPages/creationDashboard.js":"10","/home/nicholasc/Documents/Side Projects/HTN2021/client/src/pages/UserPages/nameScreen.js":"11","/home/nicholasc/Documents/Side Projects/HTN2021/client/src/pages/HostPages/questionForm.js":"12","/home/nicholasc/Documents/Side Projects/HTN2021/client/src/pages/UserPages/joiningLobby.js":"13","/home/nicholasc/Documents/Side Projects/HTN2021/client/src/pages/UserPages/userLobby.js":"14","/home/nicholasc/Documents/Side Projects/HTN2021/client/src/pages/UserPages/videoComponent/videoSession.js":"15","/home/nicholasc/Documents/Side Projects/HTN2021/client/src/pages/UserPages/RoomInterface.js":"16","/home/nicholasc/Documents/Side Projects/HTN2021/client/src/pages/UserPages/ChatElements/chatBox.js":"17","/home/nicholasc/Documents/Side Projects/HTN2021/client/src/pages/UserPages/ChatElements/Message.js":"18","/home/nicholasc/Documents/Side Projects/HTN2021/client/src/pages/UserPages/ChatElements/videoChat.js":"19","/home/nicholasc/Documents/Side Projects/HTN2021/client/src/globalStyles.js":"20"},{"size":535,"mtime":1610861545689,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1610770484870,"results":"23","hashOfConfig":"22"},{"size":2129,"mtime":1610861545689,"results":"24","hashOfConfig":"22"},{"size":108,"mtime":1610841781813,"results":"25","hashOfConfig":"22"},{"size":450,"mtime":1610845948189,"results":"26","hashOfConfig":"22"},{"size":288,"mtime":1610841781813,"results":"27","hashOfConfig":"22"},{"size":161,"mtime":1610856627096,"results":"28","hashOfConfig":"22"},{"size":463,"mtime":1610841781813,"results":"29","hashOfConfig":"22"},{"size":4017,"mtime":1610861545692,"results":"30","hashOfConfig":"22"},{"size":4367,"mtime":1610861545692,"results":"31","hashOfConfig":"22"},{"size":1887,"mtime":1610846783973,"results":"32","hashOfConfig":"22"},{"size":2048,"mtime":1610856652813,"results":"33","hashOfConfig":"22"},{"size":667,"mtime":1610841781813,"results":"34","hashOfConfig":"22"},{"size":2034,"mtime":1610852638605,"results":"35","hashOfConfig":"22"},{"size":1838,"mtime":1610841781813,"results":"36","hashOfConfig":"22"},{"size":2178,"mtime":1610854585269,"results":"37","hashOfConfig":"22"},{"size":1541,"mtime":1610854233136,"results":"38","hashOfConfig":"22"},{"size":808,"mtime":1610847171359,"results":"39","hashOfConfig":"22"},{"size":2478,"mtime":1610855607936,"results":"40","hashOfConfig":"22"},{"size":1081,"mtime":1610861545689,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"64bi2e",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"46"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/home/nicholasc/Documents/Side Projects/HTN2021/client/src/index.js",[],"/home/nicholasc/Documents/Side Projects/HTN2021/client/src/reportWebVitals.js",[],["95","96"],"/home/nicholasc/Documents/Side Projects/HTN2021/client/src/App.js",[],"/home/nicholasc/Documents/Side Projects/HTN2021/client/src/utils/index.js",[],"/home/nicholasc/Documents/Side Projects/HTN2021/client/src/pages/index.js",[],"/home/nicholasc/Documents/Side Projects/HTN2021/client/src/context/user.js",[],"/home/nicholasc/Documents/Side Projects/HTN2021/client/src/utils/socket.js",["97","98","99"],"import React, { useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\n\nconst socket = io('http://localhost:3001');\n\nexport default socket;\n\n","/home/nicholasc/Documents/Side Projects/HTN2021/client/src/utils/session.js",["100"],"import React, { useState, useEffect } from 'react'\n\nconst useSessionStorage = (key, defaultValue) => {\n    const storedValue = sessionStorage.getItem(key);\n    const value = (storedValue ? storedValue : defaultValue);\n    const [sessionValue, setSessionValue] = useState(value);\n\n    useEffect(() => {\n        sessionStorage.setItem(key, sessionValue);\n    }, [key, sessionValue])\n\n    return [sessionValue, setSessionValue];\n}\n\nexport default useSessionStorage;\n","/home/nicholasc/Documents/Side Projects/HTN2021/client/src/pages/landing.js",["101","102","103"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport styled from \"styled-components\";\nimport { socket } from '../utils/index'\nimport { useHistory, BrowserRouter as Route, Link } from \"react-router-dom\";\nimport { UserContext } from '../context/user';\nimport Sky from \"react-sky\";\nimport img0 from \"../media/dialogue.svg\";\nimport img1 from \"../media/chat.svg\";\nimport img2 from '../media/smartphone.svg';\n\nimport Logo from '../media/logo.svg';\n\nconst Landing = ({}) => {\n    const [code, setCode] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    const context = useContext(UserContext);\n\n    useEffect(() => {\n    }, [])  \n    \n    const history = useHistory();\n\n    const handleSubmitCode = () => {\n        const userId = uuidv4().slice(0, 6).toUpperCase();\n\n        //do stuff w name\n        socket.emit('userjoin', userId, code);\n\n        socket.once('userJoinStatus', (status) => {\n            if (!status.error){\n                history.push(\"/nameScreen/\" + code);\n                context.userId.setValue(userId);\n                context.roomCode.setValue(code)\n            } else {\n                setErrorMessage(status.errorMessage)\n            }\n        });\n\n        //socket.emit(userAction, generatedUserId, generatedLobbyCode)\n        //userAction - userjoin, createLobby, etc.\n    }\n\n    const handleCodeChange = ({target: {value}}) => {\n        setCode(value);\n    }\n\n    return (\n        <>\n            \n            <LandingBody>\n                <LandingDiv>\n                    <Sky\n                    style={{'order': '-1', 'position': 'absolute'}}\n                    images={{\n                        0: img0,  \n                        1: img1,\n                        2: img2\n                    }}\n                    how={150} /* Pass the number of images Sky will render chosing randomly */\n                    time={30} /* time of animation */\n                    size={'75px'} /* size of the rendered images */\n                    background={'#DAF7A6'} /* color of background */\n                />\n                        <PaperCard>\n                        \n                        <img src={Logo} alt=\"logo\" />\n                        <CodeInput onChange={handleCodeChange} placeholder=\"Enter a room code\">\n                            \n                        </CodeInput>\n                        <LandingButton onClick={handleSubmitCode} >\n                            Enter\n                        </LandingButton>\n\n                        <LandingButton onClick={() => history.push('/creationDashboard')}>\n                            Host\n                        </LandingButton>\n                        <ErrorMessage>{errorMessage && errorMessage}</ErrorMessage>\n                    </PaperCard>\n                </LandingDiv>\n            </LandingBody>\n        </>\n    );\n};\n\n\n\nconst CodeInput = styled.input`\n\n    line-height: 32px;\n    width: 222px;\n`;\n\nconst ButtonLink = styled(Link)`\n    text-decoration: none;\n    color: white;\n    font-weight: 700;\n    font-size: 20px;\n`;\n\nconst LandingButton = styled.button`\n    color: white;\n    padding: 10px;\n    border: none;\n    background: #ed7d3a;\n    margin: 8px;\n    width: 200px;\n    text-decoration: none;\n    color: white;\n    font-weight: 700;\n    font-size: 20px;\n    border-radius: 50px;\n\n    :hover {\n        opacity: 50%;\n    }\n\n`;\n\nconst LandingBody = styled.div`\n    height: 100vh;\n`;\n\nconst LandingDiv = styled.div`\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    justify-content: center;\n    height: 100%;\n    \n`;\n\nconst PaperCard = styled.div`\n    background-color: white;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    justify-content: center;\n    width: 400px;\n    height: 400px;\n    border-radius: 10px;\n\tbox-shadow: 0 10px 10px rgba(0, 0, 0, 0.2);\n`\n\nconst ErrorMessage = styled.h3`\n    color: red;\n`\n\nexport default Landing;\n\n\n\n","/home/nicholasc/Documents/Side Projects/HTN2021/client/src/pages/HostPages/creationDashboard.js",["104","105","106","107","108","109","110","111"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { socket } from '../../utils/index'\nimport { QuestionForm } from \"../index\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Container, Col, Row, ListGroup} from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport './dashboard.css'\n\nconst CreationDashboard = ({}) => {\n    const [questionsArr, setQuestionsArr] = useState([])\n    const [lobbyCode, setLobbyCode] = useState(uuidv4().slice(0, 6).toUpperCase())\n    const [roomDuration, setRoomDuration] = useState()\n    const [joinedUsers, setJoinedUsers] = useState([])\n\n    useEffect(() => {\n        socket.emit('createlobby', lobbyCode)\n\n        socket.on('userjoined', (users) => {\n            console.log(users)\n            setJoinedUsers(users);\n        })\n    }, [])\n\n    const startNetworking = () => {\n        socket.emit('startapp', lobbyCode)\n    }\n\n    const setDuration = () => {\n        socket.emit('setRoomDuration', roomDuration)\n    }\n\n    const handleSaveOptions = () => {\n        //sendState()\n    }\n\n    return (\n        <DashboardBody>\n            <hr/>\n        <Container>\n            <h1 class=\"lobbyhead\">Lobby Code: {lobbyCode}</h1>\n        </Container>\n        <Container>\n            <br/>\n            <Row>\n            <Col>\n            <ParticipantDisplay>\n                <h1>Users Currently Joined:</h1>\n                    <ul className=\"list-group\">\n                        {joinedUsers && joinedUsers.map((user) => \n                            <li>{user}</li>\n                        )}\n                        <ListGroup.Item action>LUl</ListGroup.Item>\n                        <li className=\"list-group-item list-group-item-action\">LUL</li>\n                        <li className=\"list-group-item list-group-item-action\">LUL</li>\n                        <li className=\"list-group-item list-group-item-action\">LUL</li>\n                        <li className=\"list-group-item list-group-item-action\">LUL</li>\n                        <li className=\"list-group-item list-group-item-action\">LUL</li>\n                        <li className=\"list-group-item list-group-item-action\">LUL</li>\n                        <li className=\"list-group-item list-group-item-action\">LUL</li>\n                        <li className=\"list-group-item list-group-item-action\">LUL</li>\n                        <li className=\"list-group-item list-group-item-action\">LUL</li>\n                        <li className=\"list-group-item list-group-item-action\">LUL</li>\n                        <li className=\"list-group-item list-group-item-action\">LUL</li>\n                        <li className=\"list-group-item list-group-item-action\">LUL</li>\n                        <li className=\"list-group-item list-group-item-action\">LUL</li>\n                        \n\n                        </ul>\n                </ParticipantDisplay>\n                <Button variant=\"primary\" onClick={startNetworking}>Start the session!</Button>{' '}\n            </Col>\n\n            <Col>\n            <h1>\n                Questions Prompts:\n            </h1>\n            <div class=\"card card-body\">\n            <QuestionForm />\n            </div>\n            </Col>\n            </Row>\n            </Container>\n        </DashboardBody>\n    );\n};\n\nconst ParticipantDisplay = styled.div`\n    height: 70vh;\n`;\n\nconst Participant = styled(ListGroup.Item)`\n    cursor: none;\n`;\n\nconst ParticipantList = styled(ListGroup)`\n    overflow: hidden;\n    overflow-y: scroll;\n    list-style-position: inside;\n`;\n\nconst DashboardBody = styled(Container)`\nheight: 100vh\n`;\n\nexport default CreationDashboard;","/home/nicholasc/Documents/Side Projects/HTN2021/client/src/pages/UserPages/nameScreen.js",["112","113","114","115"],"import React, { useState, useEffect, useContext} from \"react\";\nimport { useParams, useHistory } from 'react-router-dom';\nimport { socket } from '../../utils/index'\nimport styled from \"styled-components\";\nimport { BrowserRouter as Route, Link } from \"react-router-dom\";\nimport { UserContext } from '../../context/user';\n\nconst NameScreen = ({}) => {\n    let { code } = useParams(); //TEMPORARY\n\n    const [name, setName] = useState(\"\");\n    const context = useContext(UserContext);\n\n    const handleNameChange = ({ target: { value } }) => {\n       setName(value);\n    };\n\n    const submitName = () => {\n        const userId = context.userId.value;\n        const roomCode = context.roomCode.value;\n        socket.emit('chooseName', userId, name, roomCode);\n        history.push('/lobby/' + roomCode)\n    }\n    \n    const history = useHistory();\n\n    return (\n        <NameScreenBody>\n            <NameScreenDiv>\n\n                <h1>Room: {code}</h1>\n\n                <NameInput\n                    onChange={handleNameChange}\n                    placeholder=\"Choose a username\"\n                ></NameInput>\n\n                <LobbyButton onClick={submitName}>\n                    Enter\n                </LobbyButton> \n\n            </NameScreenDiv>\n        </NameScreenBody>\n    );\n};\n\nconst NameInput = styled.input`\n    line-height: 32px;\n    width: 222px;\n`;\n\nconst NameScreenBody = styled.div`\n    height: 100vh;\n`;\n\nconst NameScreenDiv = styled.div`\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    justify-content: center;\n    height: 100%;\n`;\n\nconst ButtonLink = styled(Link)`\n    text-decoration: none;\n    color: white;\n    font-weight: 700;\n    font-size: 20px;\n`;\n\nconst LobbyButton = styled.button`\n    padding: 10px;\n    border: none;\n    background: #ed7d3a;\n    border-radius: 8px;\n    margin: 8px;\n    width: 230px;\n`;\nexport default NameScreen;\n","/home/nicholasc/Documents/Side Projects/HTN2021/client/src/pages/HostPages/questionForm.js",[],"/home/nicholasc/Documents/Side Projects/HTN2021/client/src/pages/UserPages/joiningLobby.js",["116"],"import { useEffect, useState } from \"react\"\n\nconst JoiningLobby = () => {\n\n    const [participantCount, setParticipantCount] = useState(0);\n    useEffect(() => {\n        const interval = setInterval(() => {\n            console.log('Hey buddy, get clapped noob');\n            //check new number of participants\n            setParticipantCount(participantCount);\n        }, 1000);\n        return () => clearInterval(interval);\n    }, []);\n\n    return (\n        <div>\n            <h1>\n                peep console\n            </h1>\n            <h1>\n                {participantCount} have joined ...\n            </h1>\n        </div>\n    )\n}\n\nexport default JoiningLobby;","/home/nicholasc/Documents/Side Projects/HTN2021/client/src/pages/UserPages/userLobby.js",["117","118"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { socket } from '../../utils/index'\nimport { UserContext } from '../../context/user';\nimport { Spinner } from 'react-bootstrap'\n\nconst Lobby = () => {\n    const [joinedUsers, setJoinedUsers] = useState([])\n    const context = useContext(UserContext);\n    const history = useHistory()\n\n    useEffect(() => {\n        socket.on('userjoined', (users) => {\n            console.log(users)\n            setJoinedUsers(users);\n        })\n\n        socket.on('joinedroom', (data) => {\n\n            context.sessionId.setValue(data.sessionId);\n            context.token.setValue(data.token);\n\n            history.push('/room')\n\n\n        })\n\n        if (context.userId.value && context.roomCode.value) {\n            socket.emit('reconnect', context.userId.value, context.roomCode.value);\n\n        }\n\n        window.addEventListener('beforeunload', (event) => {\n            socket.emit('userleave', context.userId.value, context.roomCode.value);\n            });\n\n        window.onbeforeunload = function(){\n            return '';\n            };\n    }, [])\n\n    return (\n      <div>\n        <h1>Welcome to the Lobby, we will begin soon! :)</h1>\n\n        <h1>{joinedUsers.length} have joined ...</h1>\n\n        <div>\n          {/* <Spinner animation=\"grow\" /> */}\n          Users Currently Joined:\n          <ul>{joinedUsers && joinedUsers.map((user) => <li>{user}</li>)}</ul>\n        </div>\n      </div>\n    );\n}\n\n// const JoinCount = styled.h1`\n// :after {\n//   overflow: hidden;\n//   display: inline-block;\n//   vertical-align: bottom;\n//   -webkit-animation: ellipsis steps(4,end) 900ms infinite;      \n//   animation: ellipsis steps(4,end) 900ms infinite;\n//   content: \"\\2026\"; /* ascii code for the ellipsis character */\n//   width: 0px;\n// }\n\n// @keyframes ellipsis {\n//   to {\n//     width: 1.25em;    \n//   }\n// }\n\n// @-webkit-keyframes ellipsis {\n//   to {\n//     width: 1.25em;    \n//   }\n// }\n// `;\n\nexport default Lobby;","/home/nicholasc/Documents/Side Projects/HTN2021/client/src/pages/UserPages/videoComponent/videoSession.js",["119","120","121","122","123"],"import { useEffect } from 'react';\n\nconst { OPENTOK_API_KEY, OPENTOK_API_SECRET } = process.env; \n\nconst OT = require('@opentok/client');\n\nlet session, publisher, subscriber;\n\nvar API_KEY = '45828062';\nvar SESSION_ID = '1_MX40NTgyODA2Mn5-MTYxMDgxNTQxMjA1NH4rWUZHRjB2VWZ3L0lVcUVYVHY3L3liVjR-UH4';\nvar TOKEN = 'T1==cGFydG5lcl9pZD00NTgyODA2MiZzaWc9YTNkYTU0MjA3MzQ3NDlmN2RlMTJmODgyN2I2NmE5NTY0ZWJkZDYzMTpzZXNzaW9uX2lkPTFfTVg0ME5UZ3lPREEyTW41LU1UWXhNRGd4TlRReE1qQTFOSDRyV1VaSFJqQjJWV1ozTDBsVmNVVllWSFkzTDNsaVZqUi1VSDQmY3JlYXRlX3RpbWU9MTYxMDgxNzg4OCZub25jZT0wLjcxNDQ3NzcxMTAxNjIzNDgmcm9sZT1wdWJsaXNoZXImZXhwaXJlX3RpbWU9MTYxMDkwNDI4OA==';\n\n\nconst handleError = (error) => {\n  if (error) {\n    alert(error.message);\n  }\n}\n\nexport const initializeSession = (sessionId = SESSION_ID, token = TOKEN) => {\n    console.log('grief');\n    // check system requirements\n    if (OT.checkSystemRequirements() == 1) {\n        session = OT.initSession(API_KEY, sessionId);\n    } else {\n        // The client does not support WebRTC.\n        // You can display your own message.\n        console.log(\"Does not support WebRTC\");\n    }\n\n    // create a publisher\n    publisher = OT.initPublisher(\n        \"publisher\",\n        {\n            insertMode: \"append\",\n            width: \"100%\",\n            height: \"100%\",\n        },\n        handleError\n    );\n\n    // subscribe to new stream\n    session.connect(token, (error) => {\n        // If the connection is successful, publish to the session\n        if (error) {\n            handleError(error);\n        } else {\n            session.publish(publisher, handleError);\n        }\n    });\n\n\n    session.on('streamCreated', (event) => {\n        session.subscribe(event.stream, 'subscriber', {\n            insertMode: \"append\",\n            width: '100%',\n            height: '100%'\n        }, handleError);\n    });\n\n\n}\n\n","/home/nicholasc/Documents/Side Projects/HTN2021/client/src/pages/UserPages/RoomInterface.js",["124","125"],"import React, { useEffect, useState, useContext } from 'react';\nimport { socket } from '../../utils/index';\nimport { useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Button from 'react-bootstrap/Button';\n\nimport { UserContext } from '../../context/user';\n\nimport ChatBox from './ChatElements/chatBox'\nimport VideoChat from './ChatElements/videoChat'\n\n\nconst RoomInterface = () => {\n    const API_KEY = process.env.REACT_APP_OPENTOK_API_KEY;\n\n    const context = useContext(UserContext);\n\n    const [data, setData] = useState()\n    const [isReady, toggleIsReady] = useState(false);\n\n    const [isChatOpen, setIsChatOpen] = useState(true);\n\n\n    useEffect(() => {\n        // socket.on('joinedroom', (data) => {\n        //     console.log(data)\n\n        //     setData(data)\n        // })\n        console.log(API_KEY)\n\n        if (!context.sessionId.value || !context.token.value) {\n            console.log(\"GRIEFFFFF!\");\n        } else {\n            setData({\n                sessionId: context.sessionId.value,\n                token: context.token.value\n            })\n        }\n\n        toggleIsReady(true)\n    }, [API_KEY, context.sessionId.value, context.token.value]);\n\n\n    return (\n        <RoomBody>\n        {isReady && data ? \n            <>\n            <RoomDiv>\n                    <VideoChat API_KEY={API_KEY} SESSION_ID={data.sessionId}  TOKEN={data.token} />\n            </RoomDiv>\n            {isChatOpen && <RoomDiv>\n                <ChatBox />\n            </RoomDiv>}\n            </>\n            :\n            <Spinner animation=\"grow\" />\n        }\n        <ToggleChatButton onClick={() => setIsChatOpen(!isChatOpen)}>\n            Toggle Chat\n        </ToggleChatButton>\n        </RoomBody>\n\n    )\n}\n\nconst ToggleChatButton = styled(Button)`\n    height: 20px;\n    padding: 15px;\n    text-align: center;\n\n`\n\nconst RoomBody = styled.div`\n    display: flex;\n    \n    height: 100vh;\n`;\n\nconst RoomDiv = styled.div`\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    justify-content: center;\n    height: 100%;\n    width: 50%;\n`;\n\n\nexport default RoomInterface","/home/nicholasc/Documents/Side Projects/HTN2021/client/src/pages/UserPages/ChatElements/chatBox.js",["126"],"import React, { useEffect, useState, useContext } from 'react';\nimport styled from 'styled-components';\nimport { socket } from '../../../utils';\n\nimport Message from './Message';\n\nconst ChatBox = () => {\n    const [message, setMessage] = useState();\n    const [allMessage, setAllMessage] = useState([]);\n\n    useEffect(() => {\n        socket.on('receiveChatMsg', (msg) => {\n            const newMessage = {\n                me: false,\n                msg: msg,\n            }\n            \n            setAllMessage((message) => [...message, newMessage])\n        })\n    }, [])\n\n    const handleInput = ({target: {value}}) => {\n        setMessage(value);\n    }\n\n\n    \n\n    const handleSend = () => {\n        console.log(message)\n        socket.emit('sendChatMsg', message)\n        setAllMessage((messages) => [...messages, {me: true, msg: message}])\n        setMessage('')\n    }\n\n    return (\n        <>  \n            <ChatArea>\n                {allMessage && allMessage.map((message) => {\n                    return(\n                        <>\n                            <Message me={message.me} message={message.msg} />\n                        </>\n                    )\n                })}\n            </ChatArea>\n            <ChatInput type='text' value={message} onChange={handleInput}/>\n            <ChatButton onClick={handleSend}>Send</ChatButton>\n        </>\n    )\n}\n\nexport default ChatBox;\n\nconst ChatArea = styled.div`\n    padding: 10px;\n    height: 500px;\n`\n\nconst ChatInput = styled.input`\n\n`\n\nconst ChatButton = styled.button`\n\n`\n","/home/nicholasc/Documents/Side Projects/HTN2021/client/src/pages/UserPages/ChatElements/Message.js",["127","128","129"],"import React from 'react';\nimport styled from 'styled-components'\n\nconst Message = (props) => {\n    const { data, me, message, timestamp } = props;\n\n    return (\n        <>  \n            <MessageWrapper me={me}>\n                <Bubble me={me}>{message}</Bubble>\n            </MessageWrapper>            \n        </>\n    )   \n}\n\nexport default Message;\n\nconst MessageWrapper = styled.div`\n    padding: 10px;\n    display: flex;\n    justify-content: ${props => props.me ? `flex-end` : `flex-start`};\n`\n\nconst Bubble = styled.div`\n    box-sizing: border-box;\n    color: white;\n    border-radius: 20px;\n    max-width: 75%;\n    padding: 10px 20px;\n    background-color: ${props => props.me ? ' #ed7d3a' : 'red'};\n    display: flex;\n    /* justify-content:; */\n\n`\n\nconst Username = styled.div`\n    color: black;\n\n`","/home/nicholasc/Documents/Side Projects/HTN2021/client/src/pages/UserPages/ChatElements/videoChat.js",["130","131"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { initializeSession } from '../videoComponent/videoSession'\nimport { OTSession, OTPublisher, OTStreams, OTSubscriber } from 'opentok-react';\n\n\n// var API_KEY = '45828062';\n// var SESSION_ID = '1_MX40NTgyODA2Mn5-MTYxMDgxNTQxMjA1NH4rWUZHRjB2VWZ3L0lVcUVYVHY3L3liVjR-UH4';\n// var TOKEN = 'T1==cGFydG5lcl9pZD00NTgyODA2MiZzaWc9YTNkYTU0MjA3MzQ3NDlmN2RlMTJmODgyN2I2NmE5NTY0ZWJkZDYzMTpzZXNzaW9uX2lkPTFfTVg0ME5UZ3lPREEyTW41LU1UWXhNRGd4TlRReE1qQTFOSDRyV1VaSFJqQjJWV1ozTDBsVmNVVllWSFkzTDNsaVZqUi1VSDQmY3JlYXRlX3RpbWU9MTYxMDgxNzg4OCZub25jZT0wLjcxNDQ3NzcxMTAxNjIzNDgmcm9sZT1wdWJsaXNoZXImZXhwaXJlX3RpbWU9MTYxMDkwNDI4OA==';\n\nconst VideoChat = ({API_KEY, SESSION_ID, TOKEN}) => {\n    const [error, setError] = useState();\n    \n\n    const publisherEventHandlers = {\n        streamCreated: event => {\n          console.log('Publisher stream yay');\n        },\n        streamDestroyed: event => {\n          console.log('Publisher stream boom');\n        }\n    };\n\n    const subscriberEventHandlers = {\n        videoDisabled: event => {\n          console.log('Subscriber video disabled!');\n        },\n        videoEnabled: event => {\n          console.log('Subscriber video enabled!');\n        }\n    };\n\n    return (\n        <VideoChatBody>\n            <VideoChatDiv>\n                <OTSession\n                apiKey={API_KEY}\n                sessionId={SESSION_ID}\n                token={TOKEN}\n                onError={(err) => setError(err)}\n                eventHandlers={publisherEventHandlers}>\n                    <OTPublisher\n                    properties={{\n                        width: '400px',\n                        height: 300\n                    }}/>\n                    <OTStreams onError={(err) => setError(err)}>\n                        <OTSubscriber\n                        properties={{}}\n                        eventHandlers={subscriberEventHandlers}\n                        onError={(err) => setError(err)}/>\n                    </OTStreams>\n                </OTSession>\n                {error && <ErrorMessage>{error}</ErrorMessage>}\n            </VideoChatDiv>\n        </VideoChatBody>\n    );\n};\n\nconst ErrorMessage = styled.h1`\n\n`;\n\nconst VideoChatBody = styled.div`\n    height: 100vh;\n`;\n\nconst VideoChatDiv = styled.div`\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    justify-content: center;\n    height: 100%;\n`;\n\nexport default VideoChat;\n","/home/nicholasc/Documents/Side Projects/HTN2021/client/src/globalStyles.js",[],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":1,"column":8,"nodeType":"138","messageId":"139","endLine":1,"endColumn":13},{"ruleId":"136","severity":1,"message":"140","line":1,"column":17,"nodeType":"138","messageId":"139","endLine":1,"endColumn":26},{"ruleId":"136","severity":1,"message":"141","line":1,"column":28,"nodeType":"138","messageId":"139","endLine":1,"endColumn":36},{"ruleId":"136","severity":1,"message":"137","line":1,"column":8,"nodeType":"138","messageId":"139","endLine":1,"endColumn":13},{"ruleId":"136","severity":1,"message":"142","line":5,"column":39,"nodeType":"138","messageId":"139","endLine":5,"endColumn":44},{"ruleId":"136","severity":1,"message":"143","line":5,"column":46,"nodeType":"138","messageId":"139","endLine":5,"endColumn":50},{"ruleId":"144","severity":1,"message":"145","line":14,"column":18,"nodeType":"146","messageId":"147","endLine":14,"endColumn":20},{"ruleId":"144","severity":1,"message":"145","line":10,"column":28,"nodeType":"146","messageId":"147","endLine":10,"endColumn":30},{"ruleId":"136","severity":1,"message":"148","line":11,"column":12,"nodeType":"138","messageId":"139","endLine":11,"endColumn":24},{"ruleId":"136","severity":1,"message":"149","line":11,"column":26,"nodeType":"138","messageId":"139","endLine":11,"endColumn":41},{"ruleId":"136","severity":1,"message":"150","line":12,"column":23,"nodeType":"138","messageId":"139","endLine":12,"endColumn":35},{"ruleId":"136","severity":1,"message":"151","line":13,"column":26,"nodeType":"138","messageId":"139","endLine":13,"endColumn":41},{"ruleId":"152","severity":1,"message":"153","line":23,"column":8,"nodeType":"154","endLine":23,"endColumn":10,"suggestions":"155"},{"ruleId":"136","severity":1,"message":"156","line":29,"column":11,"nodeType":"138","messageId":"139","endLine":29,"endColumn":22},{"ruleId":"136","severity":1,"message":"157","line":33,"column":11,"nodeType":"138","messageId":"139","endLine":33,"endColumn":28},{"ruleId":"136","severity":1,"message":"140","line":1,"column":27,"nodeType":"138","messageId":"139","endLine":1,"endColumn":36},{"ruleId":"136","severity":1,"message":"142","line":5,"column":27,"nodeType":"138","messageId":"139","endLine":5,"endColumn":32},{"ruleId":"144","severity":1,"message":"145","line":8,"column":21,"nodeType":"146","messageId":"147","endLine":8,"endColumn":23},{"ruleId":"136","severity":1,"message":"158","line":64,"column":7,"nodeType":"138","messageId":"139","endLine":64,"endColumn":17},{"ruleId":"152","severity":1,"message":"159","line":13,"column":8,"nodeType":"154","endLine":13,"endColumn":10,"suggestions":"160"},{"ruleId":"136","severity":1,"message":"161","line":5,"column":10,"nodeType":"138","messageId":"139","endLine":5,"endColumn":17},{"ruleId":"152","severity":1,"message":"162","line":40,"column":8,"nodeType":"154","endLine":40,"endColumn":10,"suggestions":"163"},{"ruleId":"136","severity":1,"message":"140","line":1,"column":10,"nodeType":"138","messageId":"139","endLine":1,"endColumn":19},{"ruleId":"136","severity":1,"message":"164","line":3,"column":9,"nodeType":"138","messageId":"139","endLine":3,"endColumn":24},{"ruleId":"136","severity":1,"message":"165","line":3,"column":26,"nodeType":"138","messageId":"139","endLine":3,"endColumn":44},{"ruleId":"136","severity":1,"message":"166","line":7,"column":25,"nodeType":"138","messageId":"139","endLine":7,"endColumn":35},{"ruleId":"167","severity":1,"message":"168","line":23,"column":38,"nodeType":"169","messageId":"147","endLine":23,"endColumn":40},{"ruleId":"136","severity":1,"message":"170","line":2,"column":10,"nodeType":"138","messageId":"139","endLine":2,"endColumn":16},{"ruleId":"136","severity":1,"message":"171","line":3,"column":10,"nodeType":"138","messageId":"139","endLine":3,"endColumn":21},{"ruleId":"136","severity":1,"message":"172","line":1,"column":38,"nodeType":"138","messageId":"139","endLine":1,"endColumn":48},{"ruleId":"136","severity":1,"message":"173","line":5,"column":13,"nodeType":"138","messageId":"139","endLine":5,"endColumn":17},{"ruleId":"136","severity":1,"message":"174","line":5,"column":32,"nodeType":"138","messageId":"139","endLine":5,"endColumn":41},{"ruleId":"136","severity":1,"message":"175","line":36,"column":7,"nodeType":"138","messageId":"139","endLine":36,"endColumn":15},{"ruleId":"136","severity":1,"message":"140","line":1,"column":27,"nodeType":"138","messageId":"139","endLine":1,"endColumn":36},{"ruleId":"136","severity":1,"message":"176","line":3,"column":10,"nodeType":"138","messageId":"139","endLine":3,"endColumn":27},"no-native-reassign",["177"],"no-negated-in-lhs",["178"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'questionsArr' is assigned a value but never used.","'setQuestionsArr' is assigned a value but never used.","'setLobbyCode' is assigned a value but never used.","'setRoomDuration' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'lobbyCode'. Either include it or remove the dependency array.","ArrayExpression",["179"],"'setDuration' is assigned a value but never used.","'handleSaveOptions' is assigned a value but never used.","'ButtonLink' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'participantCount'. Either include it or remove the dependency array. You can also do a functional update 'setParticipantCount(p => ...)' if you only need 'participantCount' in the 'setParticipantCount' call.",["180"],"'Spinner' is defined but never used.","React Hook useEffect has missing dependencies: 'context.roomCode.value', 'context.sessionId', 'context.token', 'context.userId.value', and 'history'. Either include them or remove the dependency array.",["181"],"'OPENTOK_API_KEY' is assigned a value but never used.","'OPENTOK_API_SECRET' is assigned a value but never used.","'subscriber' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'socket' is defined but never used.","'useLocation' is defined but never used.","'useContext' is defined but never used.","'data' is assigned a value but never used.","'timestamp' is assigned a value but never used.","'Username' is assigned a value but never used.","'initializeSession' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},"Update the dependencies array to be: [lobbyCode]",{"range":"188","text":"189"},"Update the dependencies array to be: [participantCount]",{"range":"190","text":"191"},"Update the dependencies array to be: [context.roomCode.value, context.sessionId, context.token, context.userId.value, history]",{"range":"192","text":"193"},[834,836],"[lobbyCode]",[432,434],"[participantCount]",[1155,1157],"[context.roomCode.value, context.sessionId, context.token, context.userId.value, history]"]