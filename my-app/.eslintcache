[{"T:\\Documents\\GitHub\\HTN2021\\my-app\\src\\index.js":"1","T:\\Documents\\GitHub\\HTN2021\\my-app\\src\\App.js":"2","T:\\Documents\\GitHub\\HTN2021\\my-app\\src\\reportWebVitals.js":"3","T:\\Documents\\GitHub\\HTN2021\\my-app\\src\\pages\\index.js":"4","T:\\Documents\\GitHub\\HTN2021\\my-app\\src\\pages\\landing.js":"5","T:\\Documents\\GitHub\\HTN2021\\my-app\\src\\pages\\HostPages\\dashboard.js":"6","T:\\Documents\\GitHub\\HTN2021\\my-app\\src\\pages\\UserPages\\nameScreen.js":"7","T:\\Documents\\GitHub\\HTN2021\\my-app\\src\\pages\\UserPages\\joiningLobby.js":"8"},{"size":527,"mtime":1610779125425,"results":"9","hashOfConfig":"10"},{"size":1012,"mtime":1610818478583,"results":"11","hashOfConfig":"10"},{"size":375,"mtime":1610770591576,"results":"12","hashOfConfig":"10"},{"size":248,"mtime":1610818647270,"results":"13","hashOfConfig":"10"},{"size":2169,"mtime":1610818460763,"results":"14","hashOfConfig":"10"},{"size":567,"mtime":1610779843714,"results":"15","hashOfConfig":"10"},{"size":1536,"mtime":1610818643519,"results":"16","hashOfConfig":"10"},{"size":693,"mtime":1610789017673,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1m26779",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},"T:\\Documents\\GitHub\\HTN2021\\my-app\\src\\index.js",[],"T:\\Documents\\GitHub\\HTN2021\\my-app\\src\\App.js",["39"],"T:\\Documents\\GitHub\\HTN2021\\my-app\\src\\reportWebVitals.js",[],"T:\\Documents\\GitHub\\HTN2021\\my-app\\src\\pages\\index.js",[],"T:\\Documents\\GitHub\\HTN2021\\my-app\\src\\pages\\landing.js",["40","41"],"import React, { useState, useEffect } from \"react\";\r\nimport { io } from 'socket.io-client';\r\nimport styled from \"styled-components\";\r\nimport { BrowserRouter as Route, Link } from \"react-router-dom\";\r\n\r\nconst socket = io(\"http://localhost:3001\")\r\n\r\n\r\nconst Landing = ({}) => {\r\n    const [code, setCode] = useState('');\r\n\r\n    useEffect(() => {\r\n    }, [])  \r\n    \r\n\r\n    const handleSubmitCode = () => {\r\n        //do stuff w name\r\n        socket.emit('createlobby', 'testlobby')\r\n        socket.emit('createlobby', 'testlobby2')\r\n\r\n        socket.emit('userjoin', 'user', 'testlobby')\r\n        socket.emit('userjoin', 'user2', 'testlobby')\r\n        socket.emit('userjoin', 'user3', 'testlobby')\r\n        //socket.emit(userAction, generatedUserId, generatedLobbyCode)\r\n        //userAction - userjoin, createLobby, etc.\r\n\r\n\r\n        console.log(code);\r\n    }\r\n\r\n    const handleCodeChange = ({target: {value}}) => {\r\n        setCode(value);\r\n    }\r\n\r\n    return (\r\n    <LandingBody>\r\n        <LandingDiv>\r\n            <h1>\r\n                Traffa\r\n            </h1>\r\n            <CodeInput onChange={handleCodeChange} placeholder=\"Enter a room code\">\r\n                \r\n            </CodeInput>\r\n            <LandingButton>\r\n                <ButtonLink to={\"/nameScreen/\" + code} /*TEMPORARY*/ onClick={handleSubmitCode}>Enter</ButtonLink>\r\n            </LandingButton>\r\n\r\n            <LandingButton>\r\n                <ButtonLink to=\"/hostDashboard\">Host</ButtonLink>\r\n            </LandingButton>\r\n\r\n        </LandingDiv>\r\n    </LandingBody>\r\n    );\r\n};\r\n\r\nconst CodeInput = styled.input`\r\n    line-height: 32px;\r\n    width: 222px;\r\n`;\r\n\r\nconst ButtonLink = styled(Link)`\r\n    text-decoration: none;\r\n    color: white;\r\n    font-weight: 700;\r\n    font-size: 20px;\r\n`;\r\n\r\nconst LandingButton = styled.button`\r\n    padding: 10px;\r\n    border: none;\r\n    background: #ed7d3a;\r\n    border-radius: 8px;\r\n    margin: 8px;\r\n    width: 230px;\r\n`;\r\n\r\nconst LandingBody = styled.div`\r\nheight: 100vh;\r\n`;\r\n\r\nconst LandingDiv = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\nflex-direction: column;\r\njustify-content: center;\r\nheight: 100%;\r\n`;\r\n\r\nexport default Landing;\r\n\r\n\r\n",["42","43"],"T:\\Documents\\GitHub\\HTN2021\\my-app\\src\\pages\\HostPages\\dashboard.js",["44"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst HostDashboard = ({}) => {\r\n    return (\r\n        <HostDashboardBody>\r\n            <HostDashboardDiv>\r\n                <h1>Hi i'm HostDashboard</h1>\r\n            </HostDashboardDiv>\r\n        </HostDashboardBody>\r\n    );\r\n};\r\n\r\nconst HostDashboardBody = styled.div`\r\n    height: 100vh;\r\n`;\r\n\r\nconst HostDashboardDiv = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    height: 100%;\r\n`;\r\n\r\nexport default HostDashboard;\r\n","T:\\Documents\\GitHub\\HTN2021\\my-app\\src\\pages\\UserPages\\nameScreen.js",["45","46","47"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport styled from \"styled-components\";\r\nimport { BrowserRouter as Route, Link } from \"react-router-dom\";\r\n\r\nconst NameScreen = ({}) => {\r\n    let { code } = useParams(); //TEMPORARY\r\n\r\n    const [name, setName] = useState(\"\");\r\n\r\n    useEffect(() => {}, []);  \r\n\r\n    const handleNameChange = ({ target: { value } }) => {\r\n       setName(value);\r\n    };\r\n\r\n    return (\r\n        <NameScreenBody>\r\n            <NameScreenDiv>\r\n                <h1>Room: {code}!</h1>\r\n            </NameScreenDiv>\r\n            <NameInput\r\n                onChange={handleNameChange}\r\n                placeholder=\"Choose a username\"\r\n            ></NameInput>\r\n            <LobbyButton> \r\n                <ButtonLink to=\"/lobby\">Enter</ButtonLink>\r\n            </LobbyButton> \r\n        </NameScreenBody>\r\n    );\r\n};\r\n\r\nconst NameInput = styled.input`\r\n    line-height: 32px;\r\n    width: 222px;\r\n`;\r\n\r\nconst NameScreenBody = styled.div`\r\n    height: 100vh;\r\n`;\r\n\r\nconst NameScreenDiv = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    height: 100%;\r\n`;\r\n\r\nconst ButtonLink = styled(Link)`\r\n    text-decoration: none;\r\n    color: white;\r\n    font-weight: 700;\r\n    font-size: 20px;\r\n`;\r\n\r\nconst LobbyButton = styled.button`\r\n    padding: 10px;\r\n    border: none;\r\n    background: #ed7d3a;\r\n    border-radius: 8px;\r\n    margin: 8px;\r\n    width: 230px;\r\n`;\r\nexport default NameScreen;\r\n","T:\\Documents\\GitHub\\HTN2021\\my-app\\src\\pages\\UserPages\\joiningLobby.js",["48"],"import { useEffect, useState } from \"react\"\r\n\r\nconst JoiningLobby = () => {\r\n\r\n    const [participantCount, setParticipantCount] = useState(0);\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            console.log('Hey buddy, get clapped noob');\r\n            //check new number of participants\r\n            setParticipantCount(participantCount);\r\n        }, 1000);\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h1>\r\n                peep console\r\n            </h1>\r\n            <h1>\r\n                {participantCount} have joined ...\r\n            </h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JoiningLobby;",{"ruleId":"49","severity":1,"message":"50","line":1,"column":50,"nodeType":"51","messageId":"52","endLine":1,"endColumn":54},{"ruleId":"49","severity":1,"message":"53","line":4,"column":27,"nodeType":"51","messageId":"52","endLine":4,"endColumn":32},{"ruleId":"54","severity":1,"message":"55","line":9,"column":18,"nodeType":"56","messageId":"57","endLine":9,"endColumn":20},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"54","severity":1,"message":"55","line":4,"column":24,"nodeType":"56","messageId":"57","endLine":4,"endColumn":26},{"ruleId":"49","severity":1,"message":"53","line":4,"column":27,"nodeType":"51","messageId":"52","endLine":4,"endColumn":32},{"ruleId":"54","severity":1,"message":"55","line":6,"column":21,"nodeType":"56","messageId":"57","endLine":6,"endColumn":23},{"ruleId":"49","severity":1,"message":"62","line":9,"column":12,"nodeType":"51","messageId":"52","endLine":9,"endColumn":16},{"ruleId":"63","severity":1,"message":"64","line":13,"column":8,"nodeType":"65","endLine":13,"endColumn":10,"suggestions":"66"},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-native-reassign",["67"],"no-negated-in-lhs",["68"],"'name' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'participantCount'. Either include it or remove the dependency array. You can also do a functional update 'setParticipantCount(p => ...)' if you only need 'participantCount' in the 'setParticipantCount' call.","ArrayExpression",["69"],"no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},"Update the dependencies array to be: [participantCount]",{"range":"72","text":"73"},[444,446],"[participantCount]"]